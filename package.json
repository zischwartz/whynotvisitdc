{
  "name": "whynotvisitdc",
  "version": "1.0.0",
  "description": "A twitter bot",
  "main": "src/index.js",
  "scripts": {
    "geti-build": "docker build -f getimages/Dockerfile -t zischwartz/geti getimages",
    "geti-run": "docker run --rm -v $(pwd)/getimages/src:/app/src -v $(pwd)/getimages/output:/app/output zischwartz/geti",
    "geti-debug": "docker run --rm -it -v $(pwd)/getimages/src:/app/src -v $(pwd)/getimages/output:/app/output zischwartz/geti bash",
    "bot-build": "docker build -f bot/Dockerfile -t zischwartz/wnvdcbot ./bot",
    "bot-run": "docker run --rm -v $(pwd)/bot/src:/app/src -v $(pwd)/bot/output:/app/output zischwartz/wnvdcbot",
    "bot-debug": "docker run --rm -it -v $(pwd)/bot/src:/app/src -v $(pwd)/bot/output:/app/output zischwartz/wnvdcbot bash",
    "resize-i": "sips -Z 250 getimages/output/*",
    "cp-i": "cp -R getimages/output bot/src/images",
    "to-png": "for i in bot/src/images/*.jpeg; do sips -s format png $i --out $i.png;done",
    "machine-create":"docker-machine create --driver amazonec2 --amazonec2-region us-east-2 --amazonec2-instance-type t2.micro bot-machine",
    "machine-stop":"docker-machine stop bot-machine",
    "machine-env": "eval $(docker-machine env bot-machine)",
    "bot-run-prod": "docker run -d zischwartz/wnvdcbot",
    "deploy-bot-to-machine": "npm run bot-build && docker push zischwartz/wnvdcbot && npm run machine-env && npm run bot-run-prod",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "",
  "license": "ISC"
}
